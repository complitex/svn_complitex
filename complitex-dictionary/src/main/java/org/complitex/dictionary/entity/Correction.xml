<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.dictionary.entity.Correction">
    <resultMap id="correction" type="org.complitex.dictionary.entity.Correction">
        <result column="id" property="id"/>
        <result column="external_id" property="externalId"/>
        <result column="object_id" property="objectId"/>
        <result column="correction" property="correction"/>
        <result column="begin_date" property="beginDate"/>
        <result column="end_date" property="endDate"/>

        <result column="organization_id" property="organizationId"/>
        <result column="user_organization_id" property="userOrganizationId"/>
        <result column="module_id" property="moduleId"/>

        <result column="status" property="status"/>
    </resultMap>

    <insert id="insertCorrection" parameterType="org.complitex.dictionary.entity.Correction"
            keyProperty="id" useGeneratedKeys="true">
        insert into `${entity}_correction` (`external_id`, `object_id`, `correction`,
          `begin_date`, `end_date`, `organization_id`, `user_organization_id`, `module_id`, `status`)
            values (#{externalId}, #{objectId}, #{correction}, #{beginDate}, #{endDate},
              #{organizationId}, #{userOrganizationId}, #{moduleId}, #{status})
    </insert>

    <update id="updateCorrection" parameterType="org.complitex.dictionary.entity.Correction">
        update `${entity}_correction` set `organization_id` = #{organizationId}, `correction` = #{correction},
            `object_id` = #{objectId}, `external_id` = #{externalId}, `user_organization_id` = #{userOrganizationId},
            `begin_date` = #{beginDate}, `end_date` = #{endDate}, `status` = #{status}
        where `id` = #{id}
    </update>

    <delete id="deleteCorrection" parameterType="org.complitex.dictionary.entity.Correction">
        delete from `${entity}_correction` where `id` = #{id}
    </delete>

    <sql id="selectCorrectionWhereIf">
        <if test="object.objectId != null">c.`object_id` = #{object.objectId}</if>
        <if test="object.correction != null">
            <choose>
                <when test="not like">and c.`correction` = #{object.correction}</when>
                <otherwise>and c.`correction` like concat('%', #{object.correction},'%')</otherwise>
            </choose>
        </if>
        <if test="object.organizationId != null">and c.`organization_id` = #{object.organizationId}</if>
        <if test="object.userOrganizationId != null">and c.`user_organization_id` = #{object.userOrganizationId}</if>
        <if test="userOrganizationsString != null">and c.`user_organization_id` in #{userOrganizationsString}</if>
    </sql>

    <sql id="selectCorrectionOrderLimit">
        <if test="sortProperty != null">order by #{sortProperty} #{asc}</if>
        <if test="count > 0">limit #{first}, #{count}</if>
    </sql>

    <sql id="selectCorrectionWhere">
        <where>
            <include refid="org.complitex.dictionary.entity.Correction.selectCorrectionWhereIf"/>
        </where>
        <include refid="org.complitex.dictionary.entity.Correction.selectCorrectionOrderLimit"/>
    </sql>

    <!--deprecated-->
    <sql id="filter">
        <where>
            <if test="internalObject != null">
                AND esc.`value` LIKE CONCAT('%', #{internalObject}, '%')
            </if>

            <if test="correction != null">
                AND c.`correction` LIKE CONCAT('%', #{correction}, '%')
            </if>

            <if test="externalId != null">
                AND c.`external_id` = #{externalId}
            </if>

            <if test="organizationId != null">
                and c.`organization_id` = #{organizationId}
            </if>

            <if test="userOrganizationId != null">
                and c.`user_organization_id` = #{userOrganizationId}
            </if>

            <if test="moduleId != null">
                and c.`module_id` = #{moduleId}
            </if>

            <if test="not admin">
                and (c.`organization_id` in ${outerOrganizationsString})
                and (c.`user_organization_id` is null or c.`user_organization_id` in ${userOrganizationsString})
            </if>
        </where>
    </sql>

    <sql id="join">
        left join `organization_attribute` oa on (oa.`object_id` = c.`organization_id`
        and oa.`status` = 'ACTIVE' and oa.`attribute_type_id` = 900)
        left join `organization_string_culture` osc on (osc.`id` = oa.`value_id` and osc.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_culture` osc_sys ON (osc_sys.`id` = oa.`value_id` and osc_sys.`locale_id` = (SELECT l.`id` FROM `locales` l WHERE l.`system` = 1))

        left join `organization_attribute` oa_i on (oa_i.`object_id` = c.`module_id`
        and oa_i.`status` = 'ACTIVE' and oa_i.`attribute_type_id` = 900)
        left join `organization_string_culture` osc_i on (osc_i.`id` = oa_i.`value_id` and osc_i.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_culture` osc_i_sys ON (osc_i_sys.`id` = oa_i.`value_id` and osc_i_sys.`locale_id` = (SELECT l.`id` FROM `locales` l WHERE l.`system` = 1))

        left join `organization_attribute` uoa on (uoa.`object_id` = c.`user_organization_id`
        and uoa.`status` = 'ACTIVE' and uoa.`attribute_type_id` = 900)
        left join `organization_string_culture` uosc on (uosc.`id` = uoa.`value_id` and uosc.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_culture` uosc_sys ON (uosc_sys.`id` = uoa.`value_id` and uosc_sys.`locale_id` = (SELECT l.`id` FROM `locales` l WHERE l.`system` = 1))

        <if test="orderByClause == 'object' or internalObject != null">
            left join `${entity}_attribute` ea on (ea.`object_id` = c.`object_id`)
            left join `${entity}_string_culture` esc on (esc.`id` = ea.`value_id` and esc.`locale_id` = #{localeId})

            <if test="parentEntity != null">
                left join `${entity}` e on (e.`object_id` = c.`object_id`)
                left join `${parentEntity}_attribute` pa on (pa.`object_id` = e.`parent_id`)
                left join `${parentEntity}_string_culture` psc on (psc.`id` = pa.`value_id` and psc.`locale_id` = #{localeId})
            </if>
        </if>

        <if test="orderByClause == 'correction' and parentEntity != null">
            left join `${entity}_correction` ec on (ec.`id` = c.`parent_id`)
        </if>
    </sql>

    <sql id="find">
        SELECT
        distinct c.*, IFNULL(osc.`value`, osc_sys.`value`) organization, IFNULL(osc_i.`value`, osc_i_sys.`value`) module,
        IFNULL(uosc.`value`, uosc_sys.`value`) userOrganization
        FROM `${entity}_correction` c

        <include refid="org.complitex.correction.service.CorrectionBean.join"/>

        <include refid="org.complitex.correction.service.CorrectionBean.filter"/>

        <if test="orderByClause != null">
            ORDER BY
            <choose>
                <when test="orderByClause == 'object'">
                    <if test="parentEntity != null">
                        psc.`value` <include refid="org.complitex.dictionary.service.CorrectionBean.asc"/>,
                    </if>
                    esc.`value`
                </when>
                <when test="orderByClause == 'correction'">
                    <if test="parentEntity != null">
                        ec.`correction` <include refid="org.complitex.dictionary.service.CorrectionBean.asc"/>,
                    </if>
                    c.`correction`
                </when>
                <when test="orderByClause == 'external_id'">
                    LPAD(c.`external_id`,15,' ')
                </when>
                <otherwise>
                    ${orderByClause}
                </otherwise>
            </choose>

            <include refid="org.complitex.dictionary.service.CorrectionBean.asc"/>
        </if>

        LIMIT #{start},#{size}
    </sql>


</mapper>